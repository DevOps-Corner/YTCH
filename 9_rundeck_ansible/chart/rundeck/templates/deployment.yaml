apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rundeck.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "rundeck.name" . }}
    helm.sh/chart: {{ include "rundeck.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "rundeck.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      {{- if .Values.annotations }}
      # Annotations iteration - Useful for KIAM and others
      annotations:
        {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "rundeck.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "rundeck.fullname" . }}-sa
      securityContext:
        fsGroup: 1000
      containers:
        - name: {{ .Chart.Name }}
          command:
          - /bin/sh
          - -c
          - ln -sf /tmp/acl/* /home/rundeck/etc/ && /home/rundeck/docker-lib/entry.sh
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-environment-configmap
          env:
            - name: RUNDECK_GRAILS_URL
              value: {{ .Values.rundeck.env.RUNDECK_GRAILS_URL }}
            - name: RUNDECK_SERVER_FORWARDED
              value: "true"
            - name: RUNDECK_LOGGING_STRATEGY
              value: "CONSOLE"
            - name: RUNDECK_TOKENS_FILE
              value: "/tmp/conf/tokens.properties"
          volumeMounts:
          - name: realm-properties
            mountPath: /home/rundeck/server/config/realm.properties
            subPath: realm.properties
          - name: admin-token
            mountPath: /tmp/conf/
          - name: rundeck-acl
            mountPath: /tmp/acl/
          - name: rundeck-ansible
            mountPath: /etc/ansible
            # mountPath: /home/rundeck/var/tmp/ansible
          - name: rundeck-ansible-key
            mountPath: /home/rundeck/.ansible-key
          - name: data
            mountPath: /home/rundeck/server/data
        {{- if .Values.rundeck.sshSecrets }}
          - name: sshkeys
            mountPath: /home/rundeck/.ssh
            readOnly: true
        {{- end }}
        {{- if .Values.rundeck.awsCredentialsSecret }}
          - name: aws-credentials
            mountPath: /home/rundeck/.aws/credentials
        {{- end }}
          ports:
            - name: rundeck
              containerPort: 4440
          livenessProbe:
            httpGet:  
              path: /
              port: 4440
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 120
          readinessProbe:
            httpGet:
              path: /
              port: 4440
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: realm-properties
          configMap:
            name: {{ .Release.Name }}-realm-properties
            items:
            - key: realm.properties
              path: realm.properties
        - name: admin-token
          secret:
            secretName: {{ template "rundeck.fullname" . }}
        - name: rundeck-acl
          configMap:
            name: {{ .Release.Name }}-acl
        - name: rundeck-ansible
          configMap:
            name: {{ .Release.Name }}-ansible
            defaultMode: 0700
        - name: rundeck-ansible-key
          secret:
            secretName: {{ .Release.Name }}-ansible-key
        - name: data
        {{- if .Values.rundeck.awsVolumeId }}
          # This AWS EBS volume must already exist.
          awsElasticBlockStore:
            volumeID: {{ .Values.rundeck.awsVolumeId }}
            fsType: ext4
        {{- else }}
          emptyDir: {}
        {{- end }}  
        {{- if .Values.rundeck.sshSecrets }}
        - name: sshkeys
          secret:
            secretName: {{ .Values.rundeck.sshSecrets }}
        {{- end }}
        {{- if .Values.rundeck.awsCredentialsSecret }}
        - name: aws-credentials
          secret:
            secretName: {{ .Values.rundeck.awsCredentialsSecret}}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
